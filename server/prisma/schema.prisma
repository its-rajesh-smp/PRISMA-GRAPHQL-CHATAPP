// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String?
  email    String  @unique
  password String
  photo    String?

  // Relation
  invitationSended  Invitation[] @relation("sender")
  invitationRecived Invitation[] @relation("reciver")

  members Member[]
  Message Message[]
}

model Invitation {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  senderId  String @db.ObjectId
  reciverId String @db.ObjectId

  isGroupInvitation Boolean @default(false)
  invitationMessage String?
  invitationImage   String?
  invitationName    String?

  // Relations
  reciver User @relation(name: "reciver", fields: [reciverId], references: [id])
  sender  User @relation("sender", fields: [senderId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Chat {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  isGroup    Boolean   @default(false)
  groupImage String?
  groupName  String?
  members    Member[]
  messages   Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Member {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  userId String   @db.ObjectId
  chatId String   @db.ObjectId
  role   ChatRole

  // Relation
  user User @relation(fields: [userId], references: [id])
  chat Chat @relation(fields: [chatId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ChatRole {
  USER
  ADMIN
}

model Message {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  body     String
  senderId String  @db.ObjectId
  chatId   String? @db.ObjectId

  // Relation
  sender User  @relation(fields: [senderId], references: [id])
  chat   Chat? @relation(fields: [chatId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
